import{r as o,o as p,c,a as s,b as t,w as e,F as i,e as n,d as u}from"./app.60291803.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=s("h1",{id:"hooks",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#hooks","aria-hidden":"true"},"#"),n(" Hooks")],-1),d=s("p",null,"httpYac uses a plugin-based architecture. Most of the features listed in this documentation are implemented as plugins using hooks.",-1),h=n("The plugin architecture makes httpYac flexible and extensible. If you are interested in developing a plugin, check out the "),m=n("Plugin Development Guide"),_=n("."),f=u(`<h2 id="project-local-hooks" tabindex="-1"><a class="header-anchor" href="#project-local-hooks" aria-hidden="true">#</a> Project local hooks</h2><p>If you need access to the hooks API in your project and don&#39;t want to create a full plugin for it, you can use the <code>httpyac.config.js</code> file:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token function-variable function">configureHooks</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>responseLogging<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;removeSensitiveData&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">delete</span> response<span class="token punctuation">.</span>request<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;authorization&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,3),b=n("For more information, read the "),g=n("Plugin API"),v=n(".");function x(j,y){const a=o("RouterLink");return p(),c(i,null,[k,d,s("p",null,[h,t(a,{to:"/plugins/"},{default:e(()=>[m]),_:1}),_]),f,s("p",null,[b,t(a,{to:"/plugins/"},{default:e(()=>[g]),_:1}),v])],64)}var I=l(r,[["render",x]]);export{I as default};
