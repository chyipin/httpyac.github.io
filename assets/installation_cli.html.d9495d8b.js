import{r as o,o as l,c as r,a as n,b as a,F as p,e,d as t}from"./app.7d84a345.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";var i="/cli.gif",h="/cli_tests.gif",u="/cli_json.gif";const d={},b=n("h1",{id:"httpyac-cli",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#httpyac-cli","aria-hidden":"true"},"#"),e(" httpyac CLI")],-1),m=n("p",null,"httpyac CLI provides a command line interface to execute *.http and *.rest files. This can be used to quickly execute a single *.http file, but also to execute all files in a folder.",-1),_={href:"https://github.com/AnWeber/httpyac",target:"_blank",rel:"noopener noreferrer"},g=n("svg",{width:"24",height:"24",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor"},[n("path",{d:"M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm3.163 21.783h-.093a.513.513 0 0 1-.382-.14.513.513 0 0 1-.14-.372v-1.406c.006-.467.01-.94.01-1.416a3.693 3.693 0 0 0-.151-1.028 1.832 1.832 0 0 0-.542-.875 8.014 8.014 0 0 0 2.038-.471 4.051 4.051 0 0 0 1.466-.964c.407-.427.71-.943.885-1.506a6.77 6.77 0 0 0 .3-2.13 4.138 4.138 0 0 0-.26-1.476 3.892 3.892 0 0 0-.795-1.284 2.81 2.81 0 0 0 .162-.582c.033-.2.05-.402.05-.604 0-.26-.03-.52-.09-.773a5.309 5.309 0 0 0-.221-.763.293.293 0 0 0-.111-.02h-.11c-.23.002-.456.04-.674.111a5.34 5.34 0 0 0-.703.26 6.503 6.503 0 0 0-.661.343c-.215.127-.405.249-.573.362a9.578 9.578 0 0 0-5.143 0 13.507 13.507 0 0 0-.572-.362 6.022 6.022 0 0 0-.672-.342 4.516 4.516 0 0 0-.705-.261 2.203 2.203 0 0 0-.662-.111h-.11a.29.29 0 0 0-.11.02 5.844 5.844 0 0 0-.23.763c-.054.254-.08.513-.081.773 0 .202.017.404.051.604.033.199.086.394.16.582A3.888 3.888 0 0 0 5.702 10a4.142 4.142 0 0 0-.263 1.476 6.871 6.871 0 0 0 .292 2.12c.181.563.483 1.08.884 1.516.415.422.915.75 1.466.964.653.25 1.337.41 2.033.476a1.828 1.828 0 0 0-.452.633 2.99 2.99 0 0 0-.2.744 2.754 2.754 0 0 1-1.175.27 1.788 1.788 0 0 1-1.065-.3 2.904 2.904 0 0 1-.752-.824 3.1 3.1 0 0 0-.292-.382 2.693 2.693 0 0 0-.372-.343 1.841 1.841 0 0 0-.432-.24 1.2 1.2 0 0 0-.481-.101c-.04.001-.08.005-.12.01a.649.649 0 0 0-.162.02.408.408 0 0 0-.13.06.116.116 0 0 0-.06.1.33.33 0 0 0 .14.242c.093.074.17.131.232.171l.03.021c.133.103.261.214.382.333.112.098.213.209.3.33.09.119.168.246.231.381.073.134.15.288.231.463.188.474.522.875.954 1.145.453.243.961.364 1.476.351.174 0 .349-.01.522-.03.172-.028.343-.057.515-.091v1.743a.5.5 0 0 1-.533.521h-.062a10.286 10.286 0 1 1 6.324 0v.005z"})],-1),f=e(),k={href:"https://www.npmjs.com/package/httpyac",target:"_blank",rel:"noopener noreferrer"},v=t('<svg xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" width="54px" height="21px" viewBox="0 0 18 7"><path fill="#CB3837" d="M0,0h18v6H9v1H5V6H0V0z M1,5h2V2h1v3h1V1H1V5z M6,1v5h2V5h2V1H6z M8,2h1v2H8V2z M11,1v4h2V2h1v3h1V2h1v3h1V1H11z"></path><polygon fill="#FFFFFF" points="1,5 3,5 3,2 4,2 4,5 5,5 5,1 1,1 "></polygon><path fill="#FFFFFF" d="M6,1v5h2V5h2V1H6z M9,4H8V2h1V4z"></path><polygon fill="#FFFFFF" points="11,1 11,5 13,5 13,2 14,2 14,5 15,5 15,2 16,2 16,5 17,5 17,1 "></polygon></svg>',1),y=e(),w={href:"https://open.vscode.dev/Anweber/httpyac",target:"_blank",rel:"noopener noreferrer"},x=n("img",{src:"https://open.vscode.dev/badges/open-in-vscode.svg",alt:"Open in Visual Studio Code"},null,-1),F=n("h2",{id:"intallation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#intallation","aria-hidden":"true"},"#"),e(" Intallation")],-1),V=e("httpyac can be easily downloaded from the "),j={href:"https://www.npmjs.com/search?q=httpyac",target:"_blank",rel:"noopener noreferrer"},q=e("npm registry"),z=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g httpyac
<span class="token comment"># OR</span>
<span class="token function">yarn</span> global <span class="token function">add</span> httpyac
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="upgrading" tabindex="-1"><a class="header-anchor" href="#upgrading" aria-hidden="true">#</a> Upgrading</h2><p>To upgrade the global httpyac package, you need to run:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> update -g httpyac

<span class="token comment"># OR</span>
<span class="token function">yarn</span> global upgrade --latest httpyac
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="arguments" tabindex="-1"><a class="header-anchor" href="#arguments" aria-hidden="true">#</a> Arguments</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;</span> httpyac --help

usage: httpyac <span class="token operator">&lt;</span>file or glob pattern<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> 
       --all           execute all http requests <span class="token keyword">in</span> a http <span class="token function">file</span>
       --bail          stops when a <span class="token builtin class-name">test</span> <span class="token keyword">case</span> fails
  -e   --env           list of environments
       --filter        filter requests output <span class="token punctuation">(</span>only-failed<span class="token punctuation">)</span>
  -h   --help          <span class="token builtin class-name">help</span>
       --insecure      allow insecure server connections when using ssl
  -i   --interactive   <span class="token keyword">do</span> not <span class="token builtin class-name">exit</span> the program after request, go back to selection
       --json          use json output
  -l   --line          line of the http requests
  -n   --name          name of the http requests
       --no-color      disable color support
  -o   --output        output <span class="token function">format</span> of response <span class="token punctuation">(</span>short, body, headers, response, exchange, none<span class="token punctuation">)</span>
       --output-failed output <span class="token function">format</span> of failed response <span class="token punctuation">(</span>short, body, headers, response, exchange, none<span class="token punctuation">)</span>
       --raw           prevent formatting of response body
  -r   --repeat        repeat count <span class="token keyword">for</span> requests
       --repeat-mode   repeat mode: sequential, parallel <span class="token punctuation">(</span>default<span class="token punctuation">)</span>
  -s   --silent        log only request
       --timeout       maximum <span class="token function">time</span> allowed <span class="token keyword">for</span> connections
  -v   --verbose       <span class="token function">make</span> the operation <span class="token function">more</span> talkative

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,6),H={class:"custom-container warning"},M=n("p",{class:"custom-container-title"},"WARNING",-1),I=e("--editor option only works on linux and mac ("),N={href:"https://github.com/nodejs/node/issues/21771",target:"_blank",rel:"noopener noreferrer"},C=e("see"),O=e(")"),A=t('<h2 id="manual-selection" tabindex="-1"><a class="header-anchor" href="#manual-selection" aria-hidden="true">#</a> Manual Selection</h2><p>When called without <code>--all</code> it is possible to specify a single request.</p><p><img src="'+i+'" alt="execute one requests"></p><h2 id="execute-tests" tabindex="-1"><a class="header-anchor" href="#execute-tests" aria-hidden="true">#</a> Execute Tests</h2>',4),B=e("httpYac supports "),L={href:"https://www.npmjs.com/package/globby",target:"_blank",rel:"noopener noreferrer"},T=e("globby"),S=e(" queries. This allows multiple files to be marked for execution at the same time."),E=n("p",null,[n("img",{src:h,alt:"execute one requests"})],-1),W=n("h2",{id:"usage-in-ci-with-json-output",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#usage-in-ci-with-json-output","aria-hidden":"true"},"#"),e(" Usage in CI with JSON Output")],-1),J=e("It is possible to prevent all outputs and get a JSON object as result instead. The object corresponds to the following "),R={href:"https://github.com/AnWeber/httpyac/blob/main/src/cli/cliJsonOutput.ts#L5-L34",target:"_blank",rel:"noopener noreferrer"},U=e("interface"),G=e("."),Y=n("p",null,[n("img",{src:u,alt:"output json"})],-1);function D(K,P){const s=o("ExternalLinkIcon");return l(),r(p,null,[b,m,n("p",null,[n("a",_,[g,a(s)]),f,n("a",k,[v,a(s)]),y,n("a",w,[x,a(s)])]),F,n("p",null,[V,n("a",j,[q,a(s)])]),z,n("div",H,[M,n("p",null,[I,n("a",N,[C,a(s)]),O])]),A,n("p",null,[B,n("a",L,[T,a(s)]),S]),E,W,n("p",null,[J,n("a",R,[U,a(s)]),G]),Y],64)}var Z=c(d,[["render",D]]);export{Z as default};
