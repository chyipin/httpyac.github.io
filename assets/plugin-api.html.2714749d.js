import{_ as o,r as p,o as l,c as i,a as n,e as s,b as e,d as t}from"./app.c2eb04d6.js";const c={},r=n("h1",{id:"plugin-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#plugin-api","aria-hidden":"true"},"#"),s(" Plugin API")],-1),u={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpHooksApi.ts",target:"_blank",rel:"noopener noreferrer"},d=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">HttpyacHooksApi</span><span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> version<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> rootDir<span class="token operator">?</span><span class="token operator">:</span> PathLike<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> httpFile<span class="token operator">:</span> Readonly<span class="token operator">&lt;</span>HttpFile<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> config<span class="token operator">:</span> EnvironmentConfig<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> hooks<span class="token operator">:</span> HttpFileHooks<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> log<span class="token operator">:</span> LogHandler<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> fileProvider<span class="token operator">:</span> FileProvider<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> sessionStore<span class="token operator">:</span> SessionStore<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> userInteractionProvider<span class="token operator">:</span> UserInteractionProvider<span class="token punctuation">;</span>
  <span class="token function">getHookCancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">symbol</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h2><ul><li>Type: <code>string</code></li></ul><p>The version string for the httpYac api version that is loading the plugin.</p><h2 id="rootdir" tabindex="-1"><a class="header-anchor" href="#rootdir" aria-hidden="true">#</a> rootDir</h2><ul><li>Type: <code>string</code></li></ul><p>The project root directory of current http File.</p><h2 id="httpfile" tabindex="-1"><a class="header-anchor" href="#httpfile" aria-hidden="true">#</a> httpFile</h2>`,8),k={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpFile.ts#L7",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"HttpFile",-1),v=n("p",null,"http file prepared for parsing, which has no regions yet.",-1),b=n("h2",{id:"config",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),s(" config")],-1),m={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/environmentConfig.ts#L7",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"EnvironmentConfig",-1),_=n("p",null,"Environment configuration determined for the current execution",-1),f=n("h2",{id:"log",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#log","aria-hidden":"true"},"#"),s(" log")],-1),y={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/logHandler.ts#L13",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"LogHandler",-1),w=n("p",null,"The log module provides a simple debugging console. The output channel is redirected per use case",-1),H=n("h2",{id:"fileprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fileprovider","aria-hidden":"true"},"#"),s(" fileProvider")],-1),R={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/fileProvider.ts",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"FileProvider",-1),A=n("p",null,"Data access layer for file access",-1),C={class:"custom-container warning"},L=n("p",{class:"custom-container-title"},"WARNING",-1),T={href:"https://code.visualstudio.com/api/extension-guides/virtual-documents",target:"_blank",rel:"noopener noreferrer"},W=n("code",null,"fs",-1),j=n("h2",{id:"sessionstore",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sessionstore","aria-hidden":"true"},"#"),s(" sessionStore")],-1),q={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/sessionStore.ts",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"SessionStore",-1),E=n("p",null,"Service to store user sessions. The user has the possibility to delete them manually",-1),F=n("h2",{id:"userinteractionprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#userinteractionprovider","aria-hidden":"true"},"#"),s(" userInteractionProvider")],-1),I={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/environmentConfig.ts#L38",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"UserInteractionProvider",-1),B=n("p",null,"enables interaction with the user",-1),N=n("h2",{id:"gethookcancel",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#gethookcancel","aria-hidden":"true"},"#"),s(" getHookCancel")],-1),O={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/hook.ts#L9",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"HookCancel Symbol",-1),D=n("p",null,"function to retrieve javascript symbol, which is used to cancel execution of hooks",-1),X=n("h2",{id:"hooks",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hooks","aria-hidden":"true"},"#"),s(" hooks")],-1),Y={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpFileHooks.ts",target:"_blank",rel:"noopener noreferrer"},U=t(`<p>List of hooks for which own program logic can be registered</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">HttpFileHooks</span><span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> parse<span class="token operator">:</span> ParseHook<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> parseEndRegion<span class="token operator">:</span> ParseEndRegionHook<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> replaceVariable<span class="token operator">:</span> ReplaceVariableHook<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> provideEnvironments<span class="token operator">:</span> ProvideEnvironmentsHook<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> provideVariables<span class="token operator">:</span> ProvideVariablesHook<span class="token punctuation">;</span>


  <span class="token keyword">readonly</span> onRequest<span class="token operator">:</span> OnRequestHook<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> onResponse<span class="token operator">:</span> OnResponseHook<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> responseLogging<span class="token operator">:</span> ResponseLoggingHook<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>httpYac uses most of the hooks itself for its own application logic. Just look in the source code</p></div><h3 id="parsehook" tabindex="-1"><a class="header-anchor" href="#parsehook" aria-hidden="true">#</a> ParseHook</h3>`,4),J=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),$=n("p",null,"Arguments:",-1),z={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/parserContext.ts#L9",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"getHttpLineGenerator",-1),M={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/parserContext.ts#L12",target:"_blank",rel:"noopener noreferrer"},Q=n("code",null,"ParserContext",-1),Z={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpRegionParserResult.ts#L8",target:"_blank",rel:"noopener noreferrer"},nn=n("code",null,"HttpRegionParserResult",-1),sn=t(`<p>hook for parsing http file. The goal is to determine and register the necessary actions for this line.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>As soon as a hook determines a result, the processing for this row is aborted and the subsequent hooks are not processed (BailHook).</p></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Hook <code>request</code> and <code>requestBody</code> always returns a result. It is necessary to register your own parser before this one</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>parse<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">getLineReader<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lineReader <span class="token operator">=</span> <span class="token function">getLineReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> next <span class="token operator">=</span> lineReader<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>next<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// regex match if line is javascript start line</span>
      <span class="token keyword">const</span> match <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*GET\\s+coffee?$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ui</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>textLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      context<span class="token punctuation">.</span>httpRegion<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>execute<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;get_coffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">context</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        context<span class="token punctuation">.</span>scriptConsole<span class="token operator">?.</span>info<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get coffee</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token comment">// return nextParserLine and symbol for lines</span>
        <span class="token literal-property property">nextParserLine</span><span class="token operator">:</span> next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>line<span class="token punctuation">,</span>
        <span class="token literal-property property">symbols</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;coffee&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;coffee with some milk, no sugar&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">kind</span><span class="token operator">:</span> <span class="token string">&#39;comment&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">startLine</span><span class="token operator">:</span> next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>line<span class="token punctuation">,</span>
          <span class="token literal-property property">startOffset</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token literal-property property">endLine</span><span class="token operator">:</span> next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>line<span class="token punctuation">,</span>
          <span class="token literal-property property">endOffset</span><span class="token operator">:</span> next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>textLine<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">before</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),an={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/parseHook",target:"_blank",rel:"noopener noreferrer"},en=n("h3",{id:"parseendregionhook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parseendregionhook","aria-hidden":"true"},"#"),s(" ParseEndRegionHook")],-1),tn=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),on=n("p",null,"Arguments:",-1),pn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/parserContext.ts#L12",target:"_blank",rel:"noopener noreferrer"},ln=n("code",null,"ParserContext",-1),cn=n("li",null,[n("p",null,[s("Return: "),n("code",null,"void")])],-1),rn=n("p",null,"hook after identifying new http region",-1),un=n("h3",{id:"replacevariablehook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#replacevariablehook","aria-hidden":"true"},"#"),s(" ReplaceVariableHook")],-1),dn=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),kn=n("p",null,"Arguments:",-1),hn=n("li",null,[n("code",null,"string"),s(" text in which the variables are to be replaced")],-1),vn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/variableType.ts",target:"_blank",rel:"noopener noreferrer"},bn=n("code",null,"VariableType | string",-1),mn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/parserContext.ts#L12",target:"_blank",rel:"noopener noreferrer"},gn=n("code",null,"ParserContext",-1),_n=n("li",null,[n("p",null,[s("Return: "),n("code",null,"string")])],-1),fn=t(`<p>hook to replace variable in request line, header or request body</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>replaceVariable<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;changeXCoffeeHeader&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;X-Coffee&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;Black&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> text<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),yn={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/replaceVariableHook",target:"_blank",rel:"noopener noreferrer"},xn=n("h3",{id:"providevariableshook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#providevariableshook","aria-hidden":"true"},"#"),s(" ProvideVariablesHook")],-1),wn=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),Hn=n("p",null,"Arguments:",-1),Rn=n("li",null,[n("code",null,"string[] | undefined"),s(" list of environments")],-1),Pn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/variableProviderContext.ts",target:"_blank",rel:"noopener noreferrer"},An=n("code",null,"VariableProviderContext",-1),Cn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/variables.ts",target:"_blank",rel:"noopener noreferrer"},Ln=n("code",null,"Promise<Variables>",-1),Tn=t(`<p>hook to provide custom variables</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>provideVariables<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">envs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>envs <span class="token operator">&amp;&amp;</span> envs<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">system</span><span class="token operator">:</span> envs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">coffee</span><span class="token operator">:</span> <span class="token string">&#39;coffee with milk, no sugar&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">system</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">coffee</span><span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>provideEnvironments<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffeeEnvironments&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;kitchen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Riedbachstüberl&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Wn={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/provideVariablesHook",target:"_blank",rel:"noopener noreferrer"},jn=n("h3",{id:"provideenvironmentshook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#provideenvironmentshook","aria-hidden":"true"},"#"),s(" ProvideEnvironmentsHook")],-1),qn=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),Vn=n("p",null,"Arguments:",-1),En={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/variableProviderContext.ts",target:"_blank",rel:"noopener noreferrer"},Fn=n("code",null,"VariableProviderContext",-1),In=n("li",null,[n("p",null,[s("Return: "),n("code",null,"Promise<string[]>"),s(" list of possible environments")])],-1),Sn=t(`<p>hook to provide environments</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>provideVariables<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">envs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>envs <span class="token operator">&amp;&amp;</span> envs<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">system</span><span class="token operator">:</span> envs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">coffee</span><span class="token operator">:</span> <span class="token string">&#39;coffee with milk, no sugar&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">system</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">coffee</span><span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>provideEnvironments<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffeeEnvironments&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;kitchen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Riedbachstüberl&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Bn={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/provideVariablesHook",target:"_blank",rel:"noopener noreferrer"},Nn=n("h3",{id:"onrequest-hook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#onrequest-hook","aria-hidden":"true"},"#"),s(" OnRequest Hook")],-1),On=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),Gn=n("p",null,"Arguments:",-1),Dn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpRequest.ts",target:"_blank",rel:"noopener noreferrer"},Xn=n("code",null,"HttpRequest",-1),Yn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/processorContext.ts#L39",target:"_blank",rel:"noopener noreferrer"},Un=n("code",null,"ProcessorContext",-1),Jn=n("li",null,[n("p",null,[s("Return: "),n("code",null,"Promise<void>")])],-1),$n=t(`<p>hook called before every request call</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onRequest<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    request<span class="token punctuation">.</span>headers <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token string-property property">&#39;X-Coffee&#39;</span><span class="token operator">:</span>  <span class="token string">&#39;coffee with milk, no sugar&#39;</span><span class="token punctuation">,</span>
     <span class="token punctuation">}</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),zn={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/requestHook",target:"_blank",rel:"noopener noreferrer"},Kn=n("h3",{id:"onresponse-hook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#onresponse-hook","aria-hidden":"true"},"#"),s(" OnResponse Hook")],-1),Mn=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),Qn=n("p",null,"Arguments:",-1),Zn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpResponse.ts",target:"_blank",rel:"noopener noreferrer"},ns=n("code",null,"HttpResponse",-1),ss={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/processorContext.ts#L39",target:"_blank",rel:"noopener noreferrer"},as=n("code",null,"ProcessorContext",-1),es=n("li",null,[n("p",null,[s("Return: "),n("code",null,"Promise<void>")])],-1),ts=t(`<p>hook called after every response</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onResponse<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;coffee with milk, no sugar&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> response<span class="token punctuation">.</span>parsedBody<span class="token punctuation">;</span>
    <span class="token keyword">delete</span> response<span class="token punctuation">.</span>prettyPrintBody<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),os={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/responseHook",target:"_blank",rel:"noopener noreferrer"},ps=n("h3",{id:"responselogginghook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#responselogginghook","aria-hidden":"true"},"#"),s(" ResponseLoggingHook")],-1),ls=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),is=n("p",null,"Arguments:",-1),cs={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpResponse.ts",target:"_blank",rel:"noopener noreferrer"},rs=n("code",null,"HttpResponse",-1),us={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/processorContext.ts#L39",target:"_blank",rel:"noopener noreferrer"},ds=n("code",null,"ProcessorContext",-1),ks=n("li",null,[n("p",null,[s("Return: "),n("code",null,"Promise<void>")])],-1),hs=t(`<p>hook called for every logging of a response.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>responseLogging<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;removeHeadersAndRequest&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>
    <span class="token keyword">delete</span> response<span class="token punctuation">.</span>request<span class="token punctuation">;</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),vs={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/responseLoggingHook",target:"_blank",rel:"noopener noreferrer"};function bs(ms,gs){const a=p("ExternalLinkIcon");return l(),i("div",null,[r,n("p",null,[s("By means of the "),n("a",u,[s("plugin api"),e(a)]),s(" it is possible to register hooks at important program points of httpYac.")]),d,n("ul",null,[n("li",null,[s("Type: "),n("a",k,[h,e(a)])])]),v,b,n("ul",null,[n("li",null,[s("Type: "),n("a",m,[g,e(a)])])]),_,f,n("ul",null,[n("li",null,[s("Type: "),n("a",y,[x,e(a)])])]),w,H,n("ul",null,[n("li",null,[s("Type: "),n("a",R,[P,e(a)])])]),A,n("div",C,[L,n("p",null,[s("The VS Code extension also supports loading "),n("a",T,[s("virtual documents"),e(a)]),s(". Direct access via "),W,s(" is not always possible.")])]),j,n("ul",null,[n("li",null,[s("Type: "),n("a",q,[V,e(a)])])]),E,F,n("ul",null,[n("li",null,[s("Type: "),n("a",I,[S,e(a)])])]),B,N,n("ul",null,[n("li",null,[s("Type: "),n("a",O,[G,e(a)])])]),D,X,n("ul",null,[n("li",null,[s("Type: "),n("a",Y,[s("HttpFileHooks"),e(a)])])]),U,n("ul",null,[J,n("li",null,[$,n("ul",null,[n("li",null,[n("a",z,[K,e(a)]),s(" Generator to read lines of file")]),n("li",null,[n("a",M,[Q,e(a)]),s(" context of file parsing")])])]),n("li",null,[n("p",null,[s("Return: "),n("a",Z,[nn,e(a)])])])]),sn,n("p",null,[n("a",an,[s("full example"),e(a)])]),en,n("ul",null,[tn,n("li",null,[on,n("ul",null,[n("li",null,[n("a",pn,[ln,e(a)]),s(" context of file parsing")])])]),cn]),rn,un,n("ul",null,[dn,n("li",null,[kn,n("ul",null,[hn,n("li",null,[n("a",vn,[bn,e(a)]),s(" variableType or headerName")]),n("li",null,[n("a",mn,[gn,e(a)]),s(" context of file parsing")])])]),_n]),fn,n("p",null,[n("a",yn,[s("full example"),e(a)])]),xn,n("ul",null,[wn,n("li",null,[Hn,n("ul",null,[Rn,n("li",null,[n("a",Pn,[An,e(a)]),s(" context to determine variables")])])]),n("li",null,[n("p",null,[s("Return: "),n("a",Cn,[Ln,e(a)]),s(" promise with Variables")])])]),Tn,n("p",null,[n("a",Wn,[s("full example"),e(a)])]),jn,n("ul",null,[qn,n("li",null,[Vn,n("ul",null,[n("li",null,[n("a",En,[Fn,e(a)]),s(" context to determine variables")])])]),In]),Sn,n("p",null,[n("a",Bn,[s("full example"),e(a)])]),Nn,n("ul",null,[On,n("li",null,[Gn,n("ul",null,[n("li",null,[n("a",Dn,[Xn,e(a)]),s(" current request")]),n("li",null,[n("a",Yn,[Un,e(a)])])])]),Jn]),$n,n("p",null,[n("a",zn,[s("full example"),e(a)])]),Kn,n("ul",null,[Mn,n("li",null,[Qn,n("ul",null,[n("li",null,[n("a",Zn,[ns,e(a)]),s(" response of request")]),n("li",null,[n("a",ss,[as,e(a)])])])]),es]),ts,n("p",null,[n("a",os,[s("full example"),e(a)])]),ps,n("ul",null,[ls,n("li",null,[is,n("ul",null,[n("li",null,[n("a",cs,[rs,e(a)]),s(" response of request")]),n("li",null,[n("a",us,[ds,e(a)])])])]),ks]),hs,n("p",null,[n("a",vs,[s("full example"),e(a)])])])}const fs=o(c,[["render",bs],["__file","plugin-api.html.vue"]]);export{fs as default};
