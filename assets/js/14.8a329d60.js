(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{431:function(t,e,s){"use strict";s.r(e);var n=s(20),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"environments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#environments"}},[t._v("#")]),t._v(" Environments")]),t._v(" "),s("p",[t._v("An environment is a set of variables. By changing the environment, these variables can be exchanged. This system can be used to support different environments (e.g. dev, test, prod).")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("It is possible to select several environments at the same time.")])]),t._v(" "),s("p",[t._v("All environment variables are expanded automatically.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# .env\nauth_tokenEndpoint={{authHost}}/auth/realms/test/protocol/openid-connect/token\n\n# 9.env\nauthHost=https://my.openid.de\n\n# resolved variables\nauthHost=https://my.openid.de\nauth_tokenEndpoint=https://my.openid.de/auth/realms/test/protocol/openid-connect/token\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("The VS Code extension supports switching to different environments. A different environment can be selected per file. Newly opened files in are opened with the last active environment.")])]),t._v(" "),s("h2",{attrs:{id:"json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[t._v("#")]),t._v(" JSON")]),t._v(" "),s("p",[t._v("Environments can be provided with setting "),s("code",[t._v("environmentVariables")]),t._v(" in "),s("RouterLink",{attrs:{to:"/config/"}},[t._v(".httpyac.js")]),t._v(" . All settings with key "),s("code",[t._v("$shared")]),t._v(" are shared between all environments")],1),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"$shared"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://mydoman"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mario"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"prod"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mario"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password$ecure123"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("A setting "),s("code",[t._v("environmentVariables")]),t._v(" is supported in VS Code setting. It is automatically monitored and when changes are made, the environment is reinitialized.")])]),t._v(" "),s("h2",{attrs:{id:"dotenv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dotenv"}},[t._v("#")]),t._v(" Dotenv")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/package/dotenv",target:"_blank",rel:"noopener noreferrer"}},[t._v("dotenv"),s("OutboundLink")],1),t._v(" support is enabled by default.")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("authHost")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://my.openid.de\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("auth_tokenEndpoint")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://my.openid.de/auth/realms/test/protocol/openid-connect/token\n")])])]),s("p",[t._v("You can specify environments by prepending or appending a environement identifier")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v(".env                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# global variables")]),t._v("\n.env.local          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# variables only used in env local")]),t._v("\nlocal.env           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# variables only used in env local")]),t._v("\n")])])]),s("p",[t._v("The .env files are searched from the following locations:")]),t._v(" "),s("ul",[s("li",[t._v("same location as *.http file")]),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/config/#project-root"}},[t._v("project root")])],1),t._v(" "),s("li",[s("code",[t._v("env")]),t._v(" folder in "),s("RouterLink",{attrs:{to:"/config/#project-root"}},[t._v("project root")])],1),t._v(" "),s("li",[t._v("value of global environment variable "),s("code",[t._v("HTTPYAC_ENV")])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("httpYac tries to detect changes in .env files and clean the cache. However, if the change is made outside of VS Code, command "),s("code",[t._v("httpyac.reset")]),t._v(" must be run manually.")])]),t._v(" "),s("h2",{attrs:{id:"intellij-environment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intellij-environment"}},[t._v("#")]),t._v(" Intellij Environment")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.jetbrains.com/help/idea/exploring-http-syntax.html#environment-variables",target:"_blank",rel:"noopener noreferrer"}},[t._v("Intellij Environment Variables"),s("OutboundLink")],1),t._v(" support is enabled by default.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("http-client.env.json")]),t._v(" and "),s("code",[t._v("http-client.private.env.json")]),t._v(" files are searched from the following locations:")]),t._v(" "),s("ul",[s("li",[t._v("same location as *.http file")]),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/config/#project-root"}},[t._v("project root")])],1),t._v(" "),s("li",[s("code",[t._v("env")]),t._v(" folder in "),s("RouterLink",{attrs:{to:"/config/#project-root"}},[t._v("project root")])],1)]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("httpYac tries to detect changes in .env files and clean the cache. However, if the change is made outside of VS Code, command "),s("code",[t._v("httpyac.reset")]),t._v(" must be run manually.")])])])}),[],!1,null,null,null);e.default=a.exports}}]);