(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{427:function(t,e,a){"use strict";a.r(e);var s=a(15),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[t._v("#")]),t._v(" Variables")]),t._v(" "),a("p",[t._v("Variables are used for avoiding unnecessary data duplication in requests or for providing an easy way of switching between environments. They can be used inside request line, header fields, request body or in variable definitions. Each variable is represented by a case-sensitive identifier surrounded by double curly braces.")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("@foo=bar\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://httpbin.org/anything?q={{foo}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])])])])]),a("h2",{attrs:{id:"inline-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inline-variables"}},[t._v("#")]),t._v(" Inline Variables")]),t._v(" "),a("p",[t._v("Inline Variables can be easily created with the following scheme. Variable Substitution is supported")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("@foo=bar\n@fooExtended={{foo}}_Extendend\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://httpbin.org/anything?q={{fooExtended}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])])])])]),a("h2",{attrs:{id:"import-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-variables"}},[t._v("#")]),t._v(" Import Variables")]),t._v(" "),a("p",[t._v("The variables are also imported from other files using "),a("code",[t._v("@import")]),t._v("and "),a("code",[t._v("@ref")]),t._v(" meta data.")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("@foo=bar\n@fooExtended={{foo}}_Extendend\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://httpbin.org/anything?q={{fooExtended}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])])])])]),a("h2",{attrs:{id:"variable-substitution-in-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variable-substitution-in-request"}},[t._v("#")]),t._v(" Variable Substitution in Request")]),t._v(" "),a("p",[t._v("Before the request is sent, all variables in the request (request line, headers, request body) are replaced with the value of the variable.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("If the replacement is not desired, this can be prevented using "),a("code",[t._v("\\{\\{...\\}\\}")]),t._v(". This is replaced by "),a("code",{pre:!0},[t._v("{{...}}")])])]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("POST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://httpbin.org/anything")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v('\n{\n  "template": "My \\{\\{someVerb\\}\\} template!!"\n}')])])]),a("h3",{attrs:{id:"nodejs-script"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-script"}},[t._v("#")]),t._v(" NodeJs Script")]),t._v(" "),a("p",[t._v("All entries of the form "),a("span",{pre:!0},[t._v("{{...}}")]),t._v(" are interpreted as NodeJS Javascript which returns exactly one value. Since all variables can be easily accessed on the global scope, this allows for simple substitution.")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("@foo = test\n\nGET https://www.httpbin.org/anything?bar={{foo}}&q={{new Date().toString()}}")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("It is possible to create more complex scripts, but this is not recommended and you should use a separate script block instead.")])]),t._v(" "),a("h3",{attrs:{id:"host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host"}},[t._v("#")]),t._v(" Host")]),t._v(" "),a("p",[t._v("If the url starts with / and a variable host is defined the URL of this host will be prepended")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("@host=https://httpbin.org\n###\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/anything?q=1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/anything?q=2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])])])])]),a("h3",{attrs:{id:"input-und-quickpick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#input-und-quickpick"}},[t._v("#")]),t._v(" Input und QuickPick")]),t._v(" "),a("p",[t._v("Dynamic Variable Resolution with showInputBox and showQuickPick is supported")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("\n@query = {{$input input app? $value: foo}}\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://httpbin.org/json?q={{query}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])])])])]),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("@query = {{$pick select app? $value: foo,bar}}\n\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://httpbin.org/anything?q={{query}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])])])])]),a("h3",{attrs:{id:"oauth2-openid-connect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-openid-connect"}},[t._v("#")]),t._v(" OAuth2 / OpenID Connect")]),t._v(" "),a("p",[t._v("The following "),a("a",{attrs:{href:"https://openid.net/specs/openid-connect-basic-1_0.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Open ID Connect"),a("OutboundLink")],1),t._v(" flows are supported.")]),t._v(" "),a("ul",[a("li",[t._v("Authentication (or Basic) Flow (grant_type = authorization_code)")]),t._v(" "),a("li",[t._v("Implicit (or Hybrid) Flow (grant_type = implicit)")]),t._v(" "),a("li",[t._v("Resource Owner Password Grant (grant_type = password)")]),t._v(" "),a("li",[t._v("Client Credentials Grant (grant_type = client_credentials)")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("\nGET /secured_service\nAuthorization: openid {{grant_type}} {{prefix}}\n\n")])])]),a("p",[t._v("To configure the flow, the following variables must be specified")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("variable")]),t._v(" "),a("th",[t._v("description")]),t._v(" "),a("th",[t._v("authorization_code")]),t._v(" "),a("th",[t._v("implicit")]),t._v(" "),a("th",[t._v("password")]),t._v(" "),a("th",[t._v("client_credentials")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_tokenEndpoint")]),t._v(" "),a("td",[t._v("Token Endpoint URI")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_clientId")]),t._v(" "),a("td",[t._v("OAuth 2.0 Client Identifier")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_clientSecret")]),t._v(" "),a("td",[t._v("OAuth 2.0 Client Secret")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_authorizationEndpoint")]),t._v(" "),a("td",[t._v("Authorization Endpoint URI")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_scope")]),t._v(" "),a("td",[t._v("Scope")]),t._v(" "),a("td",[t._v("x (default: openid)")]),t._v(" "),a("td",[t._v("x (default: openid)")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_responseType")]),t._v(" "),a("td",[t._v("response type of auth server")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("x (default: code)")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_audience")]),t._v(" "),a("td",[t._v("audience")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_username")]),t._v(" "),a("td",[t._v("username")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_password")]),t._v(" "),a("td",[t._v("password")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_keepAlive")]),t._v(" "),a("td",[t._v("AccessToken is automatically renewed in the background, if request_token is provided (default: false)")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")])]),t._v(" "),a("tr",[a("td",[a("span",{pre:!0},[t._v("{{prefix}}")]),t._v("_useAuthorizationHeader")]),t._v(" "),a("td",[t._v("use Authorization Header for request (default: true)")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")]),t._v(" "),a("td",[t._v("x")])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("To get the code from the Open ID server, a http server is started for the Authorization Flow and Implicit Flow on port 3000. The server is stopped after receiving the code (delay 2 minutes). You need to configure your OpenId Provider to allow localhost:3000 as valid redirect url")])]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("\n@keycloakHost = http://127.0.0.1:8080\n@local_tokenEndpoint = {{keycloakHost}}/auth/realms/local/protocol/openid-connect/token\n@local_clientId = httpyac\n@local_clientSecret = 936DA01F-9ABD-4D9D-80C7-02AF85C822A8\n@local_scope = openid profile\n\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/secured_service")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" openid client_credentials local\n")])])]),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("@job_clientId=c003a37f-024f-462a-b36d-b001be4cd24a\n@job_clientSecret=32a39620-32b3-4307-9aa1-511e3d7f48a8\n@job_tokenEndpoint=https://api-con.arbeitsagentur.de/oauth/gettoken_cc'\n@job_useAuthorizationHeader=false\n\n###\n\nGET https://api-con.arbeitsagentur.de/prod/jobboerse/jobsuche-service/pc/v2/app/jobs?FCT.AKTUALITAET=100&FCT.ANGEBOTSART=ARBEIT\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" oauth2 client_credentials job")])])]),a("p",[t._v("It is possible to convert the generated token into a token of another realm using "),a("a",{attrs:{href:"https://tools.ietf.org/html/rfc8693",target:"_blank",rel:"noopener noreferrer"}},[t._v("Token Exchange"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("GET /secured_service HTTP/1.1\nAuthorization: openid client_credentials local token_exchange realm_auth\n")])])]),a("h3",{attrs:{id:"aws-signnature-v4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aws-signnature-v4"}},[t._v("#")]),t._v(" AWS Signnature v4")]),t._v(" "),a("p",[t._v("AWS Signature v4 authenticates requests to AWS services.")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("@accessId = doe\n@accessKey = 12345678\n@token = token\n@region = eu-central-1\n@service = cognito-idp\n\n###\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://cognito-idp.eu-central-1.amazonaws.com")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" AWS {{accessId}} {{accessKey}} token:{{token}} region:{{region}} service:{{service}}\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://cognito-idp.eu-central-1.amazonaws.com")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" AWS {{accessId}} {{accessKey}} token:{{token}}\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://cognito-idp.eu-central-1.amazonaws.com")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" AWS {{accessId}} {{accessKey}}\n\n\n\n")])])]),a("h3",{attrs:{id:"ssl-client-certificate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssl-client-certificate"}},[t._v("#")]),t._v(" SSL Client Certificate")]),t._v(" "),a("p",[t._v("To use SSL Client Certifcates, the "),a("code",[t._v("clientCertificates")]),t._v(" setting must be set. This contains the certificate to be used for each host. For each host either the certifcate/ key or pfx/ passphrase must be maintained.")]),t._v(" "),a("ul",[a("li",[t._v("cert: Path of public x509 certificate")]),t._v(" "),a("li",[t._v("key: Path of private key")]),t._v(" "),a("li",[t._v("pfx: Path of PKCS #12 or PFX certificate")]),t._v(" "),a("li",[t._v("passphrase: Optional passphrase for the certificate if required")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"clientCertificates"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"example.com"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cert"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./client.crt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./client.key"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"client.badssl.com"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pfx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./badssl.com-client.p12"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"passphrase"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"badssl.com"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://client.badssl.com/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])])])])]),a("blockquote",[a("p",[t._v("path should be absolute or relative to workspace root")])]),t._v(" "),a("p",[t._v("It is also possible to attach the certificate using (X-)ClientCert header. The header will be removed.")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://client.badssl.com/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("ClientCert:")]),t._v(" pfx: ./badssl.com-client.p12 passphrase: badssl.com\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://client.badssl.com/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("X-ClientCert:")]),t._v(" pfx: ./badssl.com-client.p12 passphrase: badssl.com\n")])])]),a("h3",{attrs:{id:"basic-authentication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-authentication"}},[t._v("#")]),t._v(" Basic Authentication")]),t._v(" "),a("p",[t._v("A support method is provided for using Basic Authentication. Just specify the username and password separated by spaces and the base64 encoding will be applied automatically")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("@user = doe\n@password = 12345678\n###\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/basic-auth/{{user}}/{{password}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" Basic {{user}} {{password}}\n")])])]),a("p",[t._v("If the username or password contains spaces, a "),a("code",[t._v(":")]),t._v(" can be used alternatively.")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("\n@user = john doe\n@password = 12345678\n\n###\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/basic-auth/{{user}}/{{password}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" Basic {{user}}:{{password}}\n")])])]),a("h3",{attrs:{id:"digest-authentication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#digest-authentication"}},[t._v("#")]),t._v(" Digest Authentication")]),t._v(" "),a("p",[t._v("A support method is provided for using Digest Authentication. Just specify the username and password separated by spaces and the digest access authentication will be applied automatically")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("\n@host = https://httpbin.org\n@user = doe\n@password = 12345678\n\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/digest-auth/auth/{{user}}/{{password}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" Digest {{user}} {{password}}\n")])])]),a("h3",{attrs:{id:"intellij-dynamic-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intellij-dynamic-variables"}},[t._v("#")]),t._v(" Intellij Dynamic Variables")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.jetbrains.com/help/idea/exploring-http-syntax.html#dynamic-variables",target:"_blank",rel:"noopener noreferrer"}},[t._v("Intellij dynamic variables"),a("OutboundLink")],1),t._v(" are supported.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$uuid")]),t._v(" "),a("td",[t._v("generates a universally unique identifier (UUID-v4)")])]),t._v(" "),a("tr",[a("td",[t._v("$timestamp")]),t._v(" "),a("td",[t._v("generates the current UNIX timestamp")])]),t._v(" "),a("tr",[a("td",[t._v("$randomInt")]),t._v(" "),a("td",[t._v("generates a random integer between 0 and 1000.")])])])]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("https://httpbin.org/anything?time={{$timestamp}}&uuid={{$uuid}}&random={{$randomInt}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])])])])]),a("h3",{attrs:{id:"rest-client-dynamic-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest-client-dynamic-variables"}},[t._v("#")]),t._v(" Rest Client Dynamic Variables")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/Huachao/vscode-restclient#system-variables",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rest Client dynamic variables"),a("OutboundLink")],1),t._v(" are partially supported.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$guid")]),t._v(" "),a("td",[t._v("generates a universally unique identifier (UUID-v4)")])]),t._v(" "),a("tr",[a("td",[t._v("$randomInt min max")]),t._v(" "),a("td",[t._v("generates a random integer between "),a("code",[t._v("min")]),t._v(" and "),a("code",[t._v("max")]),t._v(".")])]),t._v(" "),a("tr",[a("td",[t._v("$timestamp [offset option]")]),t._v(" "),a("td",[t._v("generates the current UNIX timestamp")])]),t._v(" "),a("tr",[a("td",[t._v("$datetime rfc1123|iso8601|\"custom format\"|'custom format' [offset option]")]),t._v(" "),a("td",[t._v("generates a datetime string in either ISO8601, RFC1123 or a custom display format")])]),t._v(" "),a("tr",[a("td",[t._v("$localDatetime rfc1123|iso8601|\"custom format\"|'custom format' [offset option]")]),t._v(" "),a("td",[t._v("generates a local datetime string in either ISO8601, RFC1123 or a custom display format")])])])]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/anything?q={{$guid}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n\nGET /anything?q={{$randomInt 100 200}} HTTP/1.1\n\n"),a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/anything?q={{$timestamp]}}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n\nGET /anything?q={{$timestamp 2 h}} HTTP/1.1\n\nGET /anything?q={{$datetime rfc1123}} HTTP/1.1\n\nGET /anything?q={{$datetime rfc1123 2 h}} HTTP/1.1\n\nGET /anything?q={{$datetime iso8601}} HTTP/1.1\n\nGET /anything?q={{$datetime iso8601 2 h}} HTTP/1.1\n\nGET /anything?q={{$datetime \"DD.MM.YYYY\"}} HTTP/1.1\n\nGET /anything?q={{$datetime \"DD.MM.YYYY\" 2 d}} HTTP/1.1\n\nGET /anything?q={{$datetime 'DD.MM.YYYY'}} HTTP/1.1\n\nGET /anything?q={{$datetime 'DD.MM.YYYY' 3 d}} HTTP/1.1\n\nGET /anything?q={{$localDatetime rfc1123}} HTTP/1.1\n\nGET /anything?q={{$localDatetime rfc1123 2 h}} HTTP/1.1\n\nGET /anything?q={{$localDatetime iso8601}} HTTP/1.1\n\nGET /anything?q={{$localDatetime iso8601 2 h}} HTTP/1.1\n\nGET /anything?q={{$localDatetime \"DD.MM.YYYY HH:mm\"}} HTTP/1.1\n\nGET /anything?q={{$datetime \"DD.MM.YYYY HH:mm\" 2 d}} HTTP/1.1\n\nGET /anything?q={{$datetime 'DD.MM.YYYY HH:mm'}} HTTP/1.1\n\nGET /anything?q={{$datetime 'DD.MM.YYYY HH:mm' 3 d}} HTTP/1.1")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);