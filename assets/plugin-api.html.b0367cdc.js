import{_ as o,r as p,o as l,c,a as n,b as e,F as r,e as s,d as t}from"./app.247373a9.js";const i={},u=n("h1",{id:"plugin-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#plugin-api","aria-hidden":"true"},"#"),s(" Plugin API")],-1),k=s("By means of the "),d={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpHooksApi.ts",target:"_blank",rel:"noopener noreferrer"},h=s("plugin api"),b=s(" it is possible to register hooks at important program points of httpYac."),m=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">HttpyacHooksApi</span><span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> version<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> rootDir<span class="token operator">?</span><span class="token operator">:</span> PathLike<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> httpFile<span class="token operator">:</span> Readonly<span class="token operator">&lt;</span>HttpFile<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> config<span class="token operator">:</span> EnvironmentConfig<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> hooks<span class="token operator">:</span> HttpFileHooks<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> log<span class="token operator">:</span> LogHandler<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> fileProvider<span class="token operator">:</span> FileProvider<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> sessionStore<span class="token operator">:</span> SessionStore<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> userInteractionProvider<span class="token operator">:</span> UserInteractionProvider<span class="token punctuation">;</span>
  <span class="token function">getHookCancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">symbol</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h2><ul><li>Type: <code>string</code></li></ul><p>The version string for the httpYac api version that is loading the plugin.</p><h2 id="rootdir" tabindex="-1"><a class="header-anchor" href="#rootdir" aria-hidden="true">#</a> rootDir</h2><ul><li>Type: <code>string</code></li></ul><p>The project root directory of current http File.</p><h2 id="httpfile" tabindex="-1"><a class="header-anchor" href="#httpfile" aria-hidden="true">#</a> httpFile</h2>`,8),_=s("Type: "),g={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpFile.ts#L7",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"HttpFile",-1),y=n("p",null,"http file prepared for parsing, which has no regions yet.",-1),v=n("h2",{id:"config",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),s(" config")],-1),x=s("Type: "),w={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/environmentConfig.ts#L7",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"EnvironmentConfig",-1),R=n("p",null,"Environment configuration determined for the current execution",-1),P=n("h2",{id:"log",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#log","aria-hidden":"true"},"#"),s(" log")],-1),A=s("Type: "),C={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/logHandler.ts#L13",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"LogHandler",-1),T=n("p",null,"The log module provides a simple debugging console. The output channel is redirected per use case",-1),W=n("h2",{id:"fileprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fileprovider","aria-hidden":"true"},"#"),s(" fileProvider")],-1),j=s("Type: "),q={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/fileProvider.ts",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"FileProvider",-1),E=n("p",null,"Data access layer for file access",-1),F={class:"custom-container warning"},I=n("p",{class:"custom-container-title"},"WARNING",-1),S=s("The VS Code extension also supports loading "),B={href:"https://code.visualstudio.com/api/extension-guides/virtual-documents",target:"_blank",rel:"noopener noreferrer"},N=s("virtual documents"),O=s(". Direct access via "),G=n("code",null,"fs",-1),D=s(" is not always possible."),X=n("h2",{id:"sessionstore",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sessionstore","aria-hidden":"true"},"#"),s(" sessionStore")],-1),Y=s("Type: "),U={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/sessionStore.ts",target:"_blank",rel:"noopener noreferrer"},J=n("code",null,"SessionStore",-1),$=n("p",null,"Service to store user sessions. The user has the possibility to delete them manually",-1),z=n("h2",{id:"userinteractionprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#userinteractionprovider","aria-hidden":"true"},"#"),s(" userInteractionProvider")],-1),K=s("Type: "),M={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/environmentConfig.ts#L38",target:"_blank",rel:"noopener noreferrer"},Q=n("code",null,"UserInteractionProvider",-1),Z=n("p",null,"enables interaction with the user",-1),nn=n("h2",{id:"gethookcancel",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#gethookcancel","aria-hidden":"true"},"#"),s(" getHookCancel")],-1),sn=s("Type: "),an={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/hook.ts#L9",target:"_blank",rel:"noopener noreferrer"},en=n("code",null,"HookCancel Symbol",-1),tn=n("p",null,"function to retrieve javascript symbol, which is used to cancel execution of hooks",-1),on=n("h2",{id:"hooks",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hooks","aria-hidden":"true"},"#"),s(" hooks")],-1),pn=s("Type: "),ln={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpFileHooks.ts",target:"_blank",rel:"noopener noreferrer"},cn=s("HttpFileHooks"),rn=t(`<p>List of hooks for which own program logic can be registered</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">HttpFileHooks</span><span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> parse<span class="token operator">:</span> ParseHook<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> parseEndRegion<span class="token operator">:</span> ParseEndRegionHook<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> replaceVariable<span class="token operator">:</span> ReplaceVariableHook<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> provideEnvironments<span class="token operator">:</span> ProvideEnvironmentsHook<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> provideVariables<span class="token operator">:</span> ProvideVariablesHook<span class="token punctuation">;</span>


  <span class="token keyword">readonly</span> onRequest<span class="token operator">:</span> OnRequestHook<span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> onResponse<span class="token operator">:</span> OnResponseHook<span class="token punctuation">,</span>
  <span class="token keyword">readonly</span> responseLogging<span class="token operator">:</span> ResponseLoggingHook<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>httpYac uses most of the hooks itself for its own application logic. Just look in the source code</p></div><h3 id="parsehook" tabindex="-1"><a class="header-anchor" href="#parsehook" aria-hidden="true">#</a> ParseHook</h3>`,4),un=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),kn=n("p",null,"Arguments:",-1),dn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/parserContext.ts#L9",target:"_blank",rel:"noopener noreferrer"},hn=n("code",null,"getHttpLineGenerator",-1),bn=s(" Generator to read lines of file"),mn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/parserContext.ts#L12",target:"_blank",rel:"noopener noreferrer"},_n=n("code",null,"ParserContext",-1),gn=s(" context of file parsing"),fn=s("Return: "),yn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpRegionParserResult.ts#L8",target:"_blank",rel:"noopener noreferrer"},vn=n("code",null,"HttpRegionParserResult",-1),xn=t(`<p>hook for parsing http file. The goal is to determine and register the necessary actions for this line.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>As soon as a hook determines a result, the processing for this row is aborted and the subsequent hooks are not processed (BailHook).</p></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Hook <code>request</code> and <code>requestBody</code> always returns a result. It is necessary to register your own parser before this one</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>parse<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">getLineReader<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lineReader <span class="token operator">=</span> <span class="token function">getLineReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> next <span class="token operator">=</span> lineReader<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>next<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// regex match if line is javascript start line</span>
      <span class="token keyword">const</span> match <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*GET\\s+coffee?$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ui</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>textLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      context<span class="token punctuation">.</span>httpRegion<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>execute<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;get_coffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">context</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        context<span class="token punctuation">.</span>scriptConsole<span class="token operator">?.</span>info<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get coffee</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token comment">// return nextParserLine and symbol for lines</span>
        <span class="token literal-property property">nextParserLine</span><span class="token operator">:</span> next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>line<span class="token punctuation">,</span>
        <span class="token literal-property property">symbols</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;coffee&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;coffee with some milk, no sugar&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">kind</span><span class="token operator">:</span> <span class="token string">&#39;comment&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">startLine</span><span class="token operator">:</span> next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>line<span class="token punctuation">,</span>
          <span class="token literal-property property">startOffset</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token literal-property property">endLine</span><span class="token operator">:</span> next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>line<span class="token punctuation">,</span>
          <span class="token literal-property property">endOffset</span><span class="token operator">:</span> next<span class="token punctuation">.</span>value<span class="token punctuation">.</span>textLine<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">before</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,4),wn={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/parseHook",target:"_blank",rel:"noopener noreferrer"},Hn=s("full example"),Rn=n("h3",{id:"parseendregionhook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parseendregionhook","aria-hidden":"true"},"#"),s(" ParseEndRegionHook")],-1),Pn=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),An=n("p",null,"Arguments:",-1),Cn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/parserContext.ts#L12",target:"_blank",rel:"noopener noreferrer"},Ln=n("code",null,"ParserContext",-1),Tn=s(" context of file parsing"),Wn=n("li",null,[n("p",null,[s("Return: "),n("code",null,"void")])],-1),jn=n("p",null,"hook after identifying new http region",-1),qn=n("h3",{id:"replacevariablehook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#replacevariablehook","aria-hidden":"true"},"#"),s(" ReplaceVariableHook")],-1),Vn=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),En=n("p",null,"Arguments:",-1),Fn=n("li",null,[n("code",null,"string"),s(" text in which the variables are to be replaced")],-1),In={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/variableType.ts",target:"_blank",rel:"noopener noreferrer"},Sn=n("code",null,"VariableType | string",-1),Bn=s(" variableType or headerName"),Nn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/parserContext.ts#L12",target:"_blank",rel:"noopener noreferrer"},On=n("code",null,"ParserContext",-1),Gn=s(" context of file parsing"),Dn=n("li",null,[n("p",null,[s("Return: "),n("code",null,"string")])],-1),Xn=t(`<p>hook to replace variable in request line, header or request body</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>replaceVariable<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;changeXCoffeeHeader&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;X-Coffee&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;Black&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> text<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),Yn={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/replaceVariableHook",target:"_blank",rel:"noopener noreferrer"},Un=s("full example"),Jn=n("h3",{id:"providevariableshook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#providevariableshook","aria-hidden":"true"},"#"),s(" ProvideVariablesHook")],-1),$n=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),zn=n("p",null,"Arguments:",-1),Kn=n("li",null,[n("code",null,"string[] | undefined"),s(" list of environments")],-1),Mn={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/variableProviderContext.ts",target:"_blank",rel:"noopener noreferrer"},Qn=n("code",null,"VariableProviderContext",-1),Zn=s(" context to determine variables"),ns=s("Return: "),ss={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/variables.ts",target:"_blank",rel:"noopener noreferrer"},as=n("code",null,"Promise<Variables>",-1),es=s(" promise with Variables"),ts=t(`<p>hook to provide custom variables</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>provideVariables<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">envs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>envs <span class="token operator">&amp;&amp;</span> envs<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">system</span><span class="token operator">:</span> envs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">coffee</span><span class="token operator">:</span> <span class="token string">&#39;coffee with milk, no sugar&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">system</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">coffee</span><span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>provideEnvironments<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffeeEnvironments&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;kitchen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Riedbachst\xFCberl&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,2),os={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/provideVariablesHook",target:"_blank",rel:"noopener noreferrer"},ps=s("full example"),ls=n("h3",{id:"provideenvironmentshook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#provideenvironmentshook","aria-hidden":"true"},"#"),s(" ProvideEnvironmentsHook")],-1),cs=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),rs=n("p",null,"Arguments:",-1),is={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/variableProviderContext.ts",target:"_blank",rel:"noopener noreferrer"},us=n("code",null,"VariableProviderContext",-1),ks=s(" context to determine variables"),ds=n("li",null,[n("p",null,[s("Return: "),n("code",null,"Promise<string[]>"),s(" list of possible environments")])],-1),hs=t(`<p>hook to provide environments</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>provideVariables<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">envs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>envs <span class="token operator">&amp;&amp;</span> envs<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">system</span><span class="token operator">:</span> envs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">coffee</span><span class="token operator">:</span> <span class="token string">&#39;coffee with milk, no sugar&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">system</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">coffee</span><span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>provideEnvironments<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffeeEnvironments&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;kitchen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Riedbachst\xFCberl&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,2),bs={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/provideVariablesHook",target:"_blank",rel:"noopener noreferrer"},ms=s("full example"),_s=n("h3",{id:"onrequest-hook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#onrequest-hook","aria-hidden":"true"},"#"),s(" OnRequest Hook")],-1),gs=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),fs=n("p",null,"Arguments:",-1),ys={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpRequest.ts",target:"_blank",rel:"noopener noreferrer"},vs=n("code",null,"HttpRequest",-1),xs=s(" current request"),ws={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/processorContext.ts#L39",target:"_blank",rel:"noopener noreferrer"},Hs=n("code",null,"ProcessorContext",-1),Rs=n("li",null,[n("p",null,[s("Return: "),n("code",null,"Promise<void>")])],-1),Ps=t(`<p>hook called before every request call</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onRequest<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    request<span class="token punctuation">.</span>headers <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token string-property property">&#39;X-Coffee&#39;</span><span class="token operator">:</span>  <span class="token string">&#39;coffee with milk, no sugar&#39;</span><span class="token punctuation">,</span>
     <span class="token punctuation">}</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),As={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/requestHook",target:"_blank",rel:"noopener noreferrer"},Cs=s("full example"),Ls=n("h3",{id:"onresponse-hook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#onresponse-hook","aria-hidden":"true"},"#"),s(" OnResponse Hook")],-1),Ts=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),Ws=n("p",null,"Arguments:",-1),js={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpResponse.ts",target:"_blank",rel:"noopener noreferrer"},qs=n("code",null,"HttpResponse",-1),Vs=s(" response of request"),Es={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/processorContext.ts#L39",target:"_blank",rel:"noopener noreferrer"},Fs=n("code",null,"ProcessorContext",-1),Is=n("li",null,[n("p",null,[s("Return: "),n("code",null,"Promise<void>")])],-1),Ss=t(`<p>hook called after every response</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onResponse<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;getCoffee&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;coffee with milk, no sugar&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> response<span class="token punctuation">.</span>parsedBody<span class="token punctuation">;</span>
    <span class="token keyword">delete</span> response<span class="token punctuation">.</span>prettyPrintBody<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),Bs={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/responseHook",target:"_blank",rel:"noopener noreferrer"},Ns=s("full example"),Os=n("h3",{id:"responselogginghook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#responselogginghook","aria-hidden":"true"},"#"),s(" ResponseLoggingHook")],-1),Gs=n("li",null,[n("p",null,[s("Type: "),n("code",null,"function")])],-1),Ds=n("p",null,"Arguments:",-1),Xs={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/httpResponse.ts",target:"_blank",rel:"noopener noreferrer"},Ys=n("code",null,"HttpResponse",-1),Us=s(" response of request"),Js={href:"https://github.com/AnWeber/httpyac/blob/main/src/models/processorContext.ts#L39",target:"_blank",rel:"noopener noreferrer"},$s=n("code",null,"ProcessorContext",-1),zs=n("li",null,[n("p",null,[s("Return: "),n("code",null,"Promise<void>")])],-1),Ks=t(`<p>hook called for every logging of a response.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>responseLogging<span class="token punctuation">.</span><span class="token function">addHook</span><span class="token punctuation">(</span><span class="token string">&#39;removeHeadersAndRequest&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>
    <span class="token keyword">delete</span> response<span class="token punctuation">.</span>request<span class="token punctuation">;</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,2),Ms={href:"https://github.com/httpyac/httpyac.github.io/tree/main/examples/plugins/responseLoggingHook",target:"_blank",rel:"noopener noreferrer"},Qs=s("full example");function Zs(na,sa){const a=p("ExternalLinkIcon");return l(),c(r,null,[u,n("p",null,[k,n("a",d,[h,e(a)]),b]),m,n("ul",null,[n("li",null,[_,n("a",g,[f,e(a)])])]),y,v,n("ul",null,[n("li",null,[x,n("a",w,[H,e(a)])])]),R,P,n("ul",null,[n("li",null,[A,n("a",C,[L,e(a)])])]),T,W,n("ul",null,[n("li",null,[j,n("a",q,[V,e(a)])])]),E,n("div",F,[I,n("p",null,[S,n("a",B,[N,e(a)]),O,G,D])]),X,n("ul",null,[n("li",null,[Y,n("a",U,[J,e(a)])])]),$,z,n("ul",null,[n("li",null,[K,n("a",M,[Q,e(a)])])]),Z,nn,n("ul",null,[n("li",null,[sn,n("a",an,[en,e(a)])])]),tn,on,n("ul",null,[n("li",null,[pn,n("a",ln,[cn,e(a)])])]),rn,n("ul",null,[un,n("li",null,[kn,n("ul",null,[n("li",null,[n("a",dn,[hn,e(a)]),bn]),n("li",null,[n("a",mn,[_n,e(a)]),gn])])]),n("li",null,[n("p",null,[fn,n("a",yn,[vn,e(a)])])])]),xn,n("p",null,[n("a",wn,[Hn,e(a)])]),Rn,n("ul",null,[Pn,n("li",null,[An,n("ul",null,[n("li",null,[n("a",Cn,[Ln,e(a)]),Tn])])]),Wn]),jn,qn,n("ul",null,[Vn,n("li",null,[En,n("ul",null,[Fn,n("li",null,[n("a",In,[Sn,e(a)]),Bn]),n("li",null,[n("a",Nn,[On,e(a)]),Gn])])]),Dn]),Xn,n("p",null,[n("a",Yn,[Un,e(a)])]),Jn,n("ul",null,[$n,n("li",null,[zn,n("ul",null,[Kn,n("li",null,[n("a",Mn,[Qn,e(a)]),Zn])])]),n("li",null,[n("p",null,[ns,n("a",ss,[as,e(a)]),es])])]),ts,n("p",null,[n("a",os,[ps,e(a)])]),ls,n("ul",null,[cs,n("li",null,[rs,n("ul",null,[n("li",null,[n("a",is,[us,e(a)]),ks])])]),ds]),hs,n("p",null,[n("a",bs,[ms,e(a)])]),_s,n("ul",null,[gs,n("li",null,[fs,n("ul",null,[n("li",null,[n("a",ys,[vs,e(a)]),xs]),n("li",null,[n("a",ws,[Hs,e(a)])])])]),Rs]),Ps,n("p",null,[n("a",As,[Cs,e(a)])]),Ls,n("ul",null,[Ts,n("li",null,[Ws,n("ul",null,[n("li",null,[n("a",js,[qs,e(a)]),Vs]),n("li",null,[n("a",Es,[Fs,e(a)])])])]),Is]),Ss,n("p",null,[n("a",Bs,[Ns,e(a)])]),Os,n("ul",null,[Gs,n("li",null,[Ds,n("ul",null,[n("li",null,[n("a",Xs,[Ys,e(a)]),Us]),n("li",null,[n("a",Js,[$s,e(a)])])])]),zs]),Ks,n("p",null,[n("a",Ms,[Qs,e(a)])])],64)}var ea=o(i,[["render",Zs],["__file","plugin-api.html.vue"]]);export{ea as default};
