import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.6791da08.js";
const __pageData = JSON.parse('{"title":"Troubleshooting","description":"","frontmatter":{},"headers":[{"level":2,"title":"Turn off verification of self-signed certificate","slug":"turn-off-verification-of-self-signed-certificate","link":"#turn-off-verification-of-self-signed-certificate","children":[]},{"level":2,"title":"Protocol \\"https:\\" not supported. Expected \\"http:\\" in VS Code with HTTP/2.0","slug":"protocol-https-not-supported-expected-http-in-vs-code-with-http-2-0","link":"#protocol-https-not-supported-expected-http-in-vs-code-with-http-2-0","children":[]}],"relativePath":"guide/troubleshooting.md"}'), _sfc_main = { name: "guide/troubleshooting.md" }, _hoisted_1 = /* @__PURE__ */ createStaticVNode(`<h1 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a></h1><p>This document covers some common httpYac issues and how to resolve them. You should always follow these steps before opening a new issue.</p><h2 id="turn-off-verification-of-self-signed-certificate" tabindex="-1">Turn off verification of self-signed certificate <a class="header-anchor" href="#turn-off-verification-of-self-signed-certificate" aria-hidden="true">#</a></h2><p>Self-signed certificates are not accepted by Node JS. For this reason, certificate verification must be disabled. For individual cases, the following is an option.</p><div class="language-http line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki css-variables has-highlighted-lines"><code><span class="line highlighted"><span style="color:var(--shiki-token-comment);"># </span><span style="color:var(--shiki-token-keyword);">@no-reject-unauthorized</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">GET</span><span style="color:var(--shiki-color-text);"> https://client.badssl.com/</span></span>
<span class="line"><span style="color:var(--shiki-token-string-expression);">X-ClientCert</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">pfx: </span><span style="color:var(--shiki-token-string);">../assets/badssl.com-client.p12</span><span style="color:var(--shiki-token-keyword);"> passphrase: </span><span style="color:var(--shiki-token-string);">badssl.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>It is also possible to disable the check in general in the <a href="./../config/">.httpyac.js configuration</a></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">module</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">exports</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-string-expression);">&quot;request&quot;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-string-expression);">&quot;https&quot;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);">  {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">&quot;rejectUnauthorized&quot;</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="protocol-https-not-supported-expected-http-in-vs-code-with-http-2-0" tabindex="-1">Protocol &quot;https:&quot; not supported. Expected &quot;http:&quot; in VS Code with HTTP/2.0 <a class="header-anchor" href="#protocol-https-not-supported-expected-http-in-vs-code-with-http-2-0" aria-hidden="true">#</a></h2><p>The cause is the proxy configuration of VS Code. This is set to <code>https.proxysupport=override</code> by default. For the use of http2 a <a href="https://github.com/szmarczak/http2-wrapper" target="_blank" rel="noreferrer">http2wrapper</a> is used. However, this is not recognized <a href="https://github.com/TooTallNate/node-agent-base/blob/master/src/index.ts#L15-L19" target="_blank" rel="noreferrer">correctly</a> when using the <a href="https://github.com/microsoft/vscode-proxy-agent/blob/main/package.json#L32" target="_blank" rel="noreferrer">VS Code Proxy Agent</a>. To work around this behavior, proxy support must be disabled</p><div class="language-ini line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">https.proxysupport=</span><span style="color:var(--shiki-color-text);">off</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`, 10), _hoisted_11 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_11);
}
const troubleshooting = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  troubleshooting as default
};
