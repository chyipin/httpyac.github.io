import{_ as n,r as a,o as r,c as i,a as e,e as t,b as s,d as p}from"./app.c2eb04d6.js";const c={},l=p(`<h1 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a> Troubleshooting</h1><p>This document covers some common httpYac issues and how to resolve them. You should always follow these steps before opening a new issue.</p><h2 id="turn-off-verification-of-self-signed-certificate" tabindex="-1"><a class="header-anchor" href="#turn-off-verification-of-self-signed-certificate" aria-hidden="true">#</a> Turn off verification of self-signed certificate</h2><p>Self-signed certificates are not accepted by Node JS. For this reason, certificate verification must be disabled. For individual cases, the following is an option.</p><p>&lt;&lt;&lt; ./examples/metaData/noRejectUnauthorized.http{1}</p><p>It is also possible to disable the check in general in the <a href="/config">.httpyac.js configuration</a></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;https&quot;</span><span class="token operator">:</span>  <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;rejectUnauthorized&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
     <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="protocol-https-not-supported-expected-http-in-vs-code-with-http-2-0" tabindex="-1"><a class="header-anchor" href="#protocol-https-not-supported-expected-http-in-vs-code-with-http-2-0" aria-hidden="true">#</a> Protocol &quot;https:&quot; not supported. Expected &quot;http:&quot; in VS Code with HTTP/2.0</h2>`,8),d=e("code",null,"https.proxysupport=override",-1),u={href:"https://github.com/szmarczak/http2-wrapper",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/TooTallNate/node-agent-base/blob/master/src/index.ts#L15-L19",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/microsoft/vscode-proxy-agent/blob/main/package.json#L32",target:"_blank",rel:"noopener noreferrer"},b=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`https.proxysupport=off
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1);function m(v,g){const o=a("ExternalLinkIcon");return r(),i("div",null,[l,e("p",null,[t("The cause is the proxy configuration of VS Code. This is set to "),d,t(" by default. For the use of http2 a "),e("a",u,[t("http2wrapper"),s(o)]),t(" is used. However, this is not recognized "),e("a",h,[t("correctly"),s(o)]),t(" when using the "),e("a",f,[t("VS Code Proxy Agent"),s(o)]),t(". To work around this behavior, proxy support must be disabled")]),b])}const k=n(c,[["render",m],["__file","troubleshooting.html.vue"]]);export{k as default};
