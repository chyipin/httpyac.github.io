import{r as i,o as r,c as p,a as n,b as s,w as a,F as c,d as o,e}from"./app.98a661aa.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const u={},h=o(`<h1 id="environments" tabindex="-1"><a class="header-anchor" href="#environments" aria-hidden="true">#</a> Environments</h1><p>An environment is a set of variables. By changing the environment, these variables can be exchanged. This system can be used to support different environments (e.g. dev, test, prod).</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>It is possible to select several environments at the same time.</p></div><p>All environment variables are expanded automatically.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># .env
auth_tokenEndpoint={{authHost}}/auth/realms/test/protocol/openid-connect/token

# 9.env
authHost=https://my.openid.de

# resolved variables
authHost=https://my.openid.de
auth_tokenEndpoint=https://my.openid.de/auth/realms/test/protocol/openid-connect/token
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The VS Code extension supports switching to different environments. A different environment can be selected per file. Newly opened files in are opened with the last active environment.</p></div><h2 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> JSON</h2>`,7),m=e("Environments can be provided with setting "),b=n("code",null,"environments",-1),v=e(" in "),_=e(".httpyac.js"),f=e(" . All settings with key "),g=n("code",null,"$shared",-1),k=e(" are shared between all environments All settings with key "),y=n("code",null,"$default",-1),q=e(" are used only if no environment is selected"),w=o(`<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;$shared&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://mydoman&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mario&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123456&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;prod&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mario&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password$ecure123&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>A setting <code>environmentVariables</code> is supported in VS Code setting. It is automatically monitored and when changes are made, the environment is reinitialized.</p></div><h2 id="dotenv" tabindex="-1"><a class="header-anchor" href="#dotenv" aria-hidden="true">#</a> Dotenv</h2>`,3),j={href:"https://www.npmjs.com/package/dotenv",target:"_blank",rel:"noopener noreferrer"},x=e("dotenv"),E=e(" support is enabled by default."),I=o(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">authHost</span><span class="token operator">=</span>https://my.openid.de
<span class="token assign-left variable">auth_tokenEndpoint</span><span class="token operator">=</span>https://my.openid.de/auth/realms/test/protocol/openid-connect/token
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>You can specify environments by pre pending or appending a environment identifier</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>.env                <span class="token comment"># global variables</span>
.env.local          <span class="token comment"># variables only used in env local</span>
local.env           <span class="token comment"># variables only used in env local</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>The .env files are searched from the following locations:</p>`,4),N=n("li",null,"same location as *.http file",-1),V=e("project root"),T=n("code",null,"env",-1),A=e(" folder in "),C=e("project root"),H=n("li",null,[e("value of global environment variable "),n("code",null,"HTTPYAC_ENV")],-1),S=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"WARNING"),n("p",null,[e("httpYac tries to detect changes in .env files and clean the cache. However, if the change is made outside of VS Code, command "),n("code",null,"httpyac.reset"),e(" must be run manually.")])],-1),B=n("h2",{id:"intellij-environment",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#intellij-environment","aria-hidden":"true"},"#"),e(" Intellij Environment")],-1),L={href:"https://www.jetbrains.com/help/idea/exploring-http-syntax.html#environment-variables",target:"_blank",rel:"noopener noreferrer"},P=e("Intellij Environment Variables"),R=e(" support is enabled by default."),Y=n("p",null,[e("The "),n("code",null,"http-client.env.json"),e(" and "),n("code",null,"http-client.private.env.json"),e(" files are searched from the following locations:")],-1),$=n("li",null,"same location as *.http file",-1),F=e("project root"),G=n("code",null,"env",-1),W=e(" folder in "),z=e("project root"),D=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"WARNING"),n("p",null,[e("httpYac tries to detect changes in .env files and clean the cache. However, if the change is made outside of VS Code, command "),n("code",null,"httpyac.reset"),e(" must be run manually.")])],-1);function J(O,K){const t=i("RouterLink"),l=i("ExternalLinkIcon");return r(),p(c,null,[h,n("p",null,[m,b,v,s(t,{to:"/config/"},{default:a(()=>[_]),_:1}),f,g,k,y,q]),w,n("p",null,[n("a",j,[x,s(l)]),E]),I,n("ul",null,[N,n("li",null,[s(t,{to:"/config/#project-root"},{default:a(()=>[V]),_:1})]),n("li",null,[T,A,s(t,{to:"/config/#project-root"},{default:a(()=>[C]),_:1})]),H]),S,B,n("p",null,[n("a",L,[P,s(l)]),R]),Y,n("ul",null,[$,n("li",null,[s(t,{to:"/config/#project-root"},{default:a(()=>[F]),_:1})]),n("li",null,[G,W,s(t,{to:"/config/#project-root"},{default:a(()=>[z]),_:1})])]),D],64)}var U=d(u,[["render",J]]);export{U as default};
